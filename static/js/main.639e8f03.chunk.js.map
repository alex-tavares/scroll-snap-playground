{"version":3,"sources":["utils/utils.js","App.js","index.js"],"names":["COLORS","getColor","index","color","i","Math","floor","random","getRandomColor","POINT_DIAMETER","SNAP_AXIS","NONE","X","Y","BOTH","SNAP_ALIGN","START","CENTER","END","BEAHAVIOR","MANDATORY","PROXIMITY","App","_useState","useState","_useState2","_slicedToArray","align","setAlign","_useState3","_useState4","behavior","setBehavior","_useState5","_useState6","gap","_useState7","_useState8","showSnapPoints","setShowSnapPoints","_useState9","_useState10","snapAxis","setSnapAxis","colorsArray","useMemo","Array","from","length","_","_jsxs","children","_jsx","Scrollable","dir","Box","SnapPoints","show","ControlPanel","ConfigOptions","type","id","checked","onChange","_ref","target","Object","values","map","value","name","_ref2","htmlFor","_ref3","_ref4","props","_Fragment","SnapPointStartX","SnapPointEndX","SnapPointCenter","SnapPointStartY","SnapPointEndY","styled","div","attrs","_ref5","style","backgroundColor","_templateObject","_taggedTemplateLiteral","_ref6","_ref7","_ref8","_templateObject2","_templateObject3","_templateObject4","_ref9","_ref10","concat","_ref11","_ref12","SnapPoint","_templateObject5","_templateObject6","_ref13","css","_templateObject7","_templateObject8","_ref14","_templateObject9","_templateObject10","_ref15","_templateObject11","_templateObject12","_ref16","_templateObject13","_templateObject14","_ref17","_templateObject15","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.639e8f03.chunk.js","sourcesContent":["const COLORS = [\r\n  \"#27ae60\",\r\n  \"#DAF7A6\",\r\n  \"#FFC300\",\r\n  \"#FF5733\",\r\n  \"#C70039\",\r\n  \"#900C3F\",\r\n  \"#da658a\",\r\n  \"#e9bcbf\",\r\n  \"#ffa245\",\r\n  \"#217e91\",\r\n  \"#73ad8d\"\r\n];\r\n\r\nconst getRandomColor = () => {\r\n  const letters = \"0123456789ABCDEF\";\r\n  let color = \"#\";\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n\r\nexport const getColor = (index) =>\r\n  COLORS[index] ? COLORS[index] : getRandomColor();\r\n","import { useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { getColor } from \"./utils\";\n\nconst ELEMENTS_NUMBER = 20;\nconst POINT_DIAMETER = 14;\nconst SCROLL_OFFSET = 10;\nconst GAP = 20;\n\nconst SNAP_AXIS = {\n  NONE: \"none\",\n  X: \"x\",\n  Y: \"y\",\n  // BLOCK: \"block\",\n  // INLINE: \"inline\",\n  BOTH: \"both\"\n};\n\nconst SNAP_ALIGN = {\n  START: \"start\",\n  CENTER: \"center\",\n  END: \"end\"\n};\n\nconst BEAHAVIOR = {\n  MANDATORY: \"mandatory\",\n  PROXIMITY: \"proximity\"\n};\n\nconst SCROLL_DIRECTION = {\n  LEFT_TO_RIGHT: \"ltr\",\n  RIGHT_TO_LEFT: \"rtl\"\n};\n\nexport default function App() {\n  const [align, setAlign] = useState(SNAP_ALIGN.START);\n  const [behavior, setBehavior] = useState(BEAHAVIOR.MANDATORY);\n  const [gap, setGap] = useState(GAP);\n  const [showSnapPoints, setShowSnapPoints] = useState(true);\n  const [snapAxis, setSnapAxis] = useState(SNAP_AXIS.X);\n\n  const colorsArray = useMemo(\n    () =>\n      Array.from({ length: ELEMENTS_NUMBER }, (_, index) => getColor(index)),\n    []\n  );\n\n  return (\n    <div>\n      <Scrollable dir=\"ltr\" snapAxis={snapAxis} behavior={behavior} gap={gap}>\n        {Array.from({ length: ELEMENTS_NUMBER }, (_, index) => (\n          <Box\n            key={index}\n            color={colorsArray[index]}\n            align={align}\n            snapAxis={snapAxis}\n          >\n            {index + 1}\n            <SnapPoints\n              align={align}\n              snapAxis={snapAxis}\n              show={showSnapPoints}\n            />\n          </Box>\n        ))}\n      </Scrollable>\n      <ControlPanel>\n        <ConfigOptions>\n          <div>Show Snap Points</div>\n          <input\n            type=\"checkbox\"\n            id=\"snap-points\"\n            checked={showSnapPoints}\n            onChange={({ target }) => setShowSnapPoints(target.checked)}\n          />\n        </ConfigOptions>\n        <ConfigOptions>\n          <div>Snap axis</div>\n          {Object.values(SNAP_AXIS).map((value, index) => (\n            <div key={index}>\n              <input\n                type=\"radio\"\n                id={value}\n                name=\"snap-axis\"\n                value={value}\n                checked={snapAxis === value}\n                onChange={({ target }) => setSnapAxis(target.value)}\n              />\n               <label htmlFor={value}>{value}</label>\n            </div>\n          ))}\n        </ConfigOptions>\n        <ConfigOptions>\n          <div>Align Items</div>\n          {Object.values(SNAP_ALIGN).map((value, index) => (\n            <div key={index}>\n              <input\n                type=\"radio\"\n                id={value}\n                name=\"snap-align\"\n                value={value}\n                checked={align === value}\n                onChange={({ target }) => setAlign(target.value)}\n              />\n               <label htmlFor={value}>{value}</label>\n            </div>\n          ))}\n        </ConfigOptions>\n        <ConfigOptions>\n          <div>Behavior</div>\n          {Object.values(BEAHAVIOR).map((value, index) => (\n            <div key={index}>\n              <input\n                type=\"radio\"\n                id={value}\n                name=\"behavior\"\n                value={value}\n                checked={behavior === value}\n                onChange={({ target }) => setBehavior(target.value)}\n              />\n               <label htmlFor={value}>{value}</label>\n            </div>\n          ))}\n        </ConfigOptions>\n      </ControlPanel>\n    </div>\n  );\n}\n\nfunction SnapPoints(props) {\n  const { align, snapAxis, show } = props;\n\n  if (snapAxis === \"none\" || !show) {\n    return null;\n  }\n\n  return (\n    <>\n      <SnapPointStartX align={align} snapAxis={snapAxis} />\n      <SnapPointEndX align={align} snapAxis={snapAxis} />\n      <SnapPointCenter align={align} />\n      <SnapPointStartY align={align} snapAxis={snapAxis} />\n      <SnapPointEndY align={align} snapAxis={snapAxis} />\n    </>\n  );\n}\n\n// const Box = styled.div`\n//   background-color: ${({ color }) => color};\n//   position: relative;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: ${({ snapAxis }) => (snapAxis === SNAP_AXIS.X ? \"350px\" : \"100%\")};\n//   height: ${({ snapAxis }) => (snapAxis === SNAP_AXIS.X ? \"100%\" : \"350px\")};\n//   border-radius: 12px;\n//   scroll-snap-align: ${({ align }) => align};\n// `;\n\nconst Box = styled.div.attrs(({ color }) => ({\n  style: {\n    backgroundColor: color\n  }\n}))`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${({ snapAxis }) => (snapAxis === SNAP_AXIS.X ? \"350px\" : \"100%\")};\n  height: ${({ snapAxis }) => (snapAxis === SNAP_AXIS.X ? \"100%\" : \"350px\")};\n  border-radius: 12px;\n  scroll-snap-align: ${({ align }) => align};\n`;\n\nconst ControlPanel = styled.div`\n  display: flex;\n`;\n\nconst ConfigOptions = styled.div`\n  padding: 20px;\n`;\n\nconst Scrollable = styled.div`\n  //scroll-padding: 30px;\n  position: relative;\n  padding: 50px;\n  display: grid;\n  grid-auto-flow: ${({ snapAxis }) =>\n    snapAxis === SNAP_AXIS.X ? \"column\" : \"row\"};\n  gap: ${({ gap }) => `${gap}px`};\n  width: 100%;\n  height: 400px;\n  grid-template-columns: ${({ snapAxis }) =>\n    snapAxis === SNAP_AXIS.BOTH ? \"repeat(5, 400px)\" : \"\"};\n  overflow: auto;\n  outline: 1px dashed lightgray;\n  flex: none;\n  scroll-snap-type: ${({ snapAxis, behavior }) => `${snapAxis} ${behavior}`};\n`;\n\nconst SnapPoint = styled.div`\n  position: absolute;\n  height: ${POINT_DIAMETER}px;\n  width: ${POINT_DIAMETER}px;\n  background-color: blue;\n  border-radius: 50%;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    height: ${POINT_DIAMETER}px;\n    width: ${POINT_DIAMETER}px;\n    background-color: lightblue;\n    opacity: 0.5;\n    border-radius: 50%;\n    animation: createBox 1s infinite;\n\n    @keyframes createBox {\n      from {\n        transform: scale(4);\n      }\n      to {\n        transform: scale(1);\n      }\n    }\n  }\n`;\n\nconst SnapPointStartX = styled(SnapPoint)`\n  top: calc(50% - ${POINT_DIAMETER / 2}px);\n  left: -${POINT_DIAMETER / 2}px;\n\n  ${({ align, snapAxis }) =>\n    (snapAxis === SNAP_AXIS.Y || align !== SNAP_ALIGN.START) &&\n    css`\n      display: none;\n    `}\n`;\n\nconst SnapPointEndX = styled(SnapPoint)`\n  top: calc(50% - ${POINT_DIAMETER / 2}px);\n  right: -${POINT_DIAMETER / 2}px;\n\n  ${({ align, snapAxis }) =>\n    (snapAxis === SNAP_AXIS.Y || align !== SNAP_ALIGN.END) &&\n    css`\n      display: none;\n    `}\n`;\n\nconst SnapPointCenter = styled(SnapPoint)`\n  top: calc(50% - ${POINT_DIAMETER / 2}px);\n  left: calc(50% - ${POINT_DIAMETER / 2}px);\n\n  ${({ align }) =>\n    align !== SNAP_ALIGN.CENTER &&\n    css`\n      display: none;\n    `}\n`;\n\nconst SnapPointStartY = styled(SnapPoint)`\n  top: -${POINT_DIAMETER / 2}px;\n  left: calc(50% - ${POINT_DIAMETER / 2}px);\n\n  ${({ align, snapAxis }) =>\n    (snapAxis === SNAP_AXIS.X || align !== SNAP_ALIGN.START) &&\n    css`\n      display: none;\n    `};\n`;\n\nconst SnapPointEndY = styled(SnapPoint)`\n  bottom: -${POINT_DIAMETER / 2}px;\n  left: calc(50% - ${POINT_DIAMETER / 2}px);\n\n  ${({ align, snapAxis }) =>\n    (snapAxis === SNAP_AXIS.X || align !== SNAP_ALIGN.END) &&\n    css`\n      display: none;\n    `}\n`;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}